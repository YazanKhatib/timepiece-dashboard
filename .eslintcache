[{"E:\\Self Projects\\timepiece\\src\\index.tsx":"1","E:\\Self Projects\\timepiece\\src\\components\\FormElements\\FormElements.tsx":"2","E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginForm.tsx":"3","E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginFormReducer.ts":"4","E:\\Self Projects\\timepiece\\src\\components\\Loader\\Loader.tsx":"5","E:\\Self Projects\\timepiece\\src\\pages\\Login\\Login.tsx":"6","E:\\Self Projects\\timepiece\\src\\services\\Store\\store.ts":"7","E:\\Self Projects\\timepiece\\src\\services\\routes\\AppRoutes.tsx":"8","E:\\Self Projects\\timepiece\\src\\services\\store\\store.ts":"9","E:\\Self Projects\\timepiece\\src\\services\\hoc\\helpers.ts":"10","E:\\Self Projects\\timepiece\\src\\services\\routes\\ScrollToTop.tsx":"11","E:\\Self Projects\\timepiece\\src\\pages\\Dashboard\\Dashboard.tsx":"12","E:\\Self Projects\\timepiece\\src\\components\\Nav\\Nav.tsx":"13","E:\\Self Projects\\timepiece\\src\\containers\\Analytics\\Analytics.tsx":"14","E:\\Self Projects\\timepiece\\src\\components\\Statistics\\Statistics.tsx":"15","E:\\Self Projects\\timepiece\\src\\components\\Filters\\Filters.tsx":"16","E:\\Self Projects\\timepiece\\src\\services\\api\\api.tsx":"17","E:\\Self Projects\\timepiece\\src\\components\\Modal\\Modal.tsx":"18"},{"size":930,"mtime":1609325854161,"results":"19","hashOfConfig":"20"},{"size":4399,"mtime":1609327735449,"results":"21","hashOfConfig":"20"},{"size":4542,"mtime":1609329692711,"results":"22","hashOfConfig":"20"},{"size":1519,"mtime":1608395436609,"results":"23","hashOfConfig":"20"},{"size":562,"mtime":1608395920621,"results":"24","hashOfConfig":"20"},{"size":824,"mtime":1609354404756,"results":"25","hashOfConfig":"20"},{"size":340,"mtime":1608464747623,"results":"26","hashOfConfig":"20"},{"size":1473,"mtime":1609329920180,"results":"27","hashOfConfig":"20"},{"size":340,"mtime":1608464747623,"results":"28","hashOfConfig":"20"},{"size":639,"mtime":1609329053565,"results":"29","hashOfConfig":"20"},{"size":452,"mtime":1608466749805,"results":"30","hashOfConfig":"20"},{"size":1932,"mtime":1609089776083,"results":"31","hashOfConfig":"20"},{"size":2170,"mtime":1608842582964,"results":"32","hashOfConfig":"20"},{"size":2147,"mtime":1609193584098,"results":"33","hashOfConfig":"20"},{"size":3234,"mtime":1609260624328,"results":"34","hashOfConfig":"20"},{"size":1046,"mtime":1609193432476,"results":"35","hashOfConfig":"20"},{"size":757,"mtime":1609265019776,"results":"36","hashOfConfig":"20"},{"size":3121,"mtime":1609354087342,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pn4hqa",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Self Projects\\timepiece\\src\\index.tsx",[],["81","82"],"E:\\Self Projects\\timepiece\\src\\components\\FormElements\\FormElements.tsx",[],"E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginForm.tsx",["83","84"],"import React, { useState } from \"react\";\r\n\r\n// Translation\r\nimport { useTranslation } from \"react-multi-lang\";\r\n\r\n// Cookies\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loginSlice, loginState } from \"./LoginFormReducer\";\r\n\r\n// Compoentns\r\nimport { Checkbox, InputField } from \"../../components/FormElements/FormElements\";\r\nimport { RippleLoader, SuccessMark } from \"../../components/Loader/Loader\";\r\n\r\n// Stylesheet\r\nimport './LoginForm.css'\r\n\r\n// Services\r\nimport API from '../../services/api/api'\r\nimport { addToDate } from \"../../services/hoc/helpers\";\r\n\r\nexport default function () {\r\n\r\n    // Translation\r\n    const t = useTranslation()\r\n\r\n    // Redux\r\n    const dispatch = useDispatch()\r\n    const loginState = useSelector( ( state: { login: loginState } ) => state.login )\r\n\r\n    // Hooks\r\n    const [username, setUsername] = useState<string>(\"\");\r\n    const [usernameError, setUsernameError] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [passwordError, setPasswordError] = useState<string>(\"\");\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\r\n    const [showSucessMark, setShowSuccessMark] = useState<boolean>(false)\r\n\r\n    // Cookies hooks\r\n    const [_, setCookie] = useCookies(['userinfo']);\r\n\r\n    // API\r\n    const ENDPOINTS = new API()\r\n\r\n    const login = () => {\r\n        \r\n        if(!username) {\r\n            setUsernameError(t(\"required_error\"))\r\n            return\r\n        }\r\n        \r\n        if(!password) {\r\n            setPasswordError(t(\"required_error\"))\r\n            return\r\n        }\r\n\r\n        dispatch( loginSlice.actions.load({}) )\r\n\r\n        ENDPOINTS.auth().login({ username, password })\r\n        .then((response: any) => {\r\n            \r\n            if(response.data.data) {\r\n\r\n                dispatch( loginSlice.actions.success({}) )\r\n                setShowSuccessMark(true)\r\n                setTimeout(() => {\r\n                    let expires: Date = rememberMe ? addToDate( new Date(), \"years\", 1 ) : addToDate( new Date(), \"hours\", 1 );\r\n                    setCookie(\"userinfo\", response.data.data, { expires: expires })\r\n                }, 1500);\r\n\r\n            } else {\r\n                dispatch( loginSlice.actions.error(true) )\r\n            }\r\n\r\n        })\r\n        .catch((error: any) => {\r\n            dispatch( loginSlice.actions.error(true) )\r\n        })\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-form\">\r\n            \r\n            <form onSubmit={(e: React.FormEvent<HTMLFormElement>) => e.preventDefault()}>\r\n                \r\n                <InputField\r\n                    value={username}\r\n                    type=\"text\"\r\n                    placeholder={t('username')}\r\n                    error={usernameError}\r\n                    disabled={loginState.isLoading || loginState.isSuccess}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setUsername(e.currentTarget.value);\r\n                        setUsernameError(\"\")\r\n                        if( loginState.isError ) dispatch( loginSlice.actions.error(false) )\r\n                    } } />\r\n\r\n                <InputField\r\n                    value={password}\r\n                    type=\"password\"\r\n                    placeholder={t('password')}\r\n                    error={passwordError}\r\n                    disabled={loginState.isLoading || loginState.isSuccess}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setPassword(e.currentTarget.value);\r\n                        setPasswordError(\"\")\r\n                        if( loginState.isError ) dispatch( loginSlice.actions.error(false) )\r\n                    } } />\r\n                \r\n                <Checkbox\r\n                    label={t('remember_me')}\r\n                    disabled={loginState.isLoading || loginState.isSuccess}\r\n                    checked={rememberMe}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setRememberMe(e.target.checked)} />\r\n                \r\n                <div className=\"text-center\"><button className={ \"button bg-gold color-white round\" + (loginState.isSuccess ? \" scale\" : '') } style={{ width: loginState.isLoading ? 50 : 200 }} onClick={login}>{ loginState.isLoading ? <RippleLoader /> : t('login') }</button></div>\r\n\r\n                { showSucessMark ? <SuccessMark /> : '' }\r\n\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n\r\n}","E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginFormReducer.ts",[],"E:\\Self Projects\\timepiece\\src\\components\\Loader\\Loader.tsx",[],"E:\\Self Projects\\timepiece\\src\\pages\\Login\\Login.tsx",["85"],"E:\\Self Projects\\timepiece\\src\\services\\Store\\store.ts",[],"E:\\Self Projects\\timepiece\\src\\services\\routes\\AppRoutes.tsx",["86"],"import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport ScrollToTop from './ScrollToTop'\r\nimport Login from '../../pages/Login/Login'\r\nimport Dashboard from '../../pages/Dashboard/Dashboard'\r\nimport { withCookies } from \"react-cookie\";\r\n\r\nclass AppRoutes extends Component<{cookies: any}> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        if(localStorage.getItem(\"lang\"))\r\n            document.body.classList.add(localStorage.getItem(\"lang\") == 'ar' ? 'rtl' : 'ltr')\r\n        if(localStorage.getItem(\"theme\"))\r\n            document.body.classList.add( String( localStorage.getItem(\"theme\") ) )\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Router basename=\"/\">\r\n                <ScrollToTop>\r\n                    { !this.props.cookies.get(\"userinfo\") ?\r\n                    \r\n                    // Auth pages\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Login} />\r\n                        <Route path=\"/\" component={() => <>404</>} />\r\n                    </Switch> :\r\n\r\n                    // Dashboard pages\r\n                    <Switch>\r\n                        <Route path=\"/:section\" component={Dashboard} />\r\n                        <Route path=\"/\" component={Dashboard} />\r\n                    </Switch> }\r\n                </ScrollToTop>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCookies(AppRoutes)","E:\\Self Projects\\timepiece\\src\\services\\store\\store.ts",[],"E:\\Self Projects\\timepiece\\src\\services\\hoc\\helpers.ts",[],"E:\\Self Projects\\timepiece\\src\\services\\routes\\ScrollToTop.tsx",["87"],"import React, { Component } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\n\r\nclass ScrollToTop extends Component<RouteComponentProps> {\r\n    \r\n    componentDidUpdate(prevProps: RouteComponentProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","E:\\Self Projects\\timepiece\\src\\pages\\Dashboard\\Dashboard.tsx",["88"],"import React from 'react'\r\nimport { useTranslation } from 'react-multi-lang'\r\n\r\n// Components\r\nimport { SideNav, TopNav } from '../../components/Nav/Nav'\r\nimport Analytics from '../../containers/Analytics/Analytics'\r\n\r\n// Stylesheet\r\nimport './Dashboard.css'\r\n\r\nexport default (props: any) => {\r\n\r\n    const t = useTranslation()\r\n\r\n    const navList = [\r\n        {\r\n            icon: \"icon-analysis\",\r\n            name: t(\"analytics\"),\r\n            link: \"/analytics\"\r\n        },\r\n        {\r\n            icon: \"icon-username-1\",\r\n            name: t(\"dealers\"),\r\n            link: \"/dealers\"\r\n        },\r\n        {\r\n            icon: \"icon-time-1\",\r\n            name: t(\"watches\"),\r\n            link: \"/watches\"\r\n        },\r\n        {\r\n            icon: \"icon-users\",\r\n            name: t(\"users\"),\r\n            link: \"/users\"\r\n        },\r\n        {\r\n            icon: \"icon-notification-1\",\r\n            name: t(\"notifications\"),\r\n            link: \"/notifications\"\r\n        },\r\n    ]\r\n\r\n    const dashboardContent = () => {\r\n        let section = props.match.params.section ? props.match.params.section.toLowerCase() : \"\"\r\n        switch (section) {\r\n            case \"analytics\":\r\n                return(<Analytics />)\r\n            case \"dealers\":\r\n                return(<>Dealers!</>)\r\n            case \"watches\":\r\n                return(<>Watches!</>)\r\n            case \"users\":\r\n                return(<>Users!</>)\r\n            case \"notifications\":\r\n                return(<>Notifications!</>)\r\n            default:\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"dashboard-page\">\r\n            <SideNav list={navList} active={props.match.params.section} />\r\n            <div className=\"main-side\">\r\n\r\n                <TopNav />\r\n\r\n                <div className=\"content\">\r\n                    { dashboardContent() }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","E:\\Self Projects\\timepiece\\src\\components\\Nav\\Nav.tsx",["89","90","91"],"import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// Stylesheet\r\nimport './Nav.css'\r\n\r\n// Assets\r\nimport Logo from '../../assets/images/logo/primary.svg'\r\nimport { LanguageSwitcher, LightDarkModeSwitcher } from '../FormElements/FormElements'\r\n\r\ninterface NavProps {\r\n    list: {\r\n        icon: string,\r\n        name: string,\r\n        link: string\r\n    }[],\r\n    active: string | null\r\n}\r\n\r\nexport const SideNav = (props: NavProps) => {\r\n\r\n\r\n    const getActiveIndexByName = (name: string | null): number => {\r\n        let matched_index = 0\r\n        props.list.map((item, index) => {\r\n            if (item.link.substring(1) === name)\r\n                matched_index = index\r\n        })\r\n        return matched_index\r\n    }\r\n\r\n    const getActiveBoxPositionByIndex = (index: number): number => {\r\n        return index === 0 ? index * 90 : index === props.list.length - 1 ? index * 90 + 10 : index * 90 + 5\r\n    }\r\n\r\n    const [activeBox, setActiveBox] = useState<number>(getActiveBoxPositionByIndex(getActiveIndexByName(props.active)))\r\n\r\n    console.log(activeBox)\r\n\r\n    return (\r\n        <nav className=\"side-nav\">\r\n            <div className=\"active-box\" style={{ top: activeBox }} />\r\n            <ul>\r\n                {props.list.map((item, index) => {\r\n                    return (\r\n                        <li key={index} className={item.link.substring(1) === props.active ? \"active\" : \"\"} onClick={() => setActiveBox(getActiveBoxPositionByIndex(index))}><Link to={item.link}><span><i className={item.icon}></i> {item.name}</span></Link></li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport const TopNav = () => {\r\n\r\n    return (\r\n        <nav className=\"top-nav\">\r\n            <img src={Logo} className=\"logo\" />\r\n\r\n            <div className=\"actions\">\r\n\r\n                <div className=\"switchers\">\r\n                    <LightDarkModeSwitcher />\r\n                    <span className=\"margin-10\" />\r\n                    <LanguageSwitcher />\r\n                </div>\r\n\r\n                <i className=\"icon-logout\" />\r\n\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n\r\n}","E:\\Self Projects\\timepiece\\src\\containers\\Analytics\\Analytics.tsx",["92"],"import React from 'react'\r\nimport { Col, Row } from 'react-grid-system'\r\nimport { useTranslation } from 'react-multi-lang'\r\n\r\n// Components\r\nimport { LineChart, NumberBox } from '../../components/Statistics/Statistics'\r\n\r\nexport default () => {\r\n\r\n    const t = useTranslation()\r\n\r\n    let LineChartLabels = [t(\"sa\"), t(\"su\"), t(\"mo\"), t(\"tu\"), t(\"we\"), t(\"th\"), t(\"fr\")]\r\n    let LineChartDatasets = [\r\n        {\r\n            color: '#FF0077',\r\n            label: t('users'),\r\n            data: [10, 5, 7, 5, 12, 10, 2]\r\n        },\r\n        {\r\n            color: '#FFBB52',\r\n            label: t('dealers'),\r\n            data: [5, 2, 3, 6, 0, 4, 2]\r\n        },\r\n        {\r\n            color: '#00ABFF',\r\n            label: t('watches'),\r\n            data: [8, 6, 4, 15, 8, 5, 4]\r\n        }\r\n    ]\r\n\r\n    let GrowthLabels = [t(\"jan\"), t(\"feb\"), t(\"mar\"), t(\"apr\"), t(\"may\"), t(\"jun\"), t(\"jul\"), t(\"aug\"), t(\"sep\"), t(\"oct\"), t(\"nov\"), t(\"dec\")]\r\n    let GrowthDatasets = [\r\n        {\r\n            color: '#FF0077',\r\n            label: t('growth'),\r\n            data: [1, 2, 3, 4, 7, 10, 13, 15, 20, 25, 27, 28, 30]\r\n        }\r\n    ]\r\n\r\n    return (\r\n\r\n        <Row style={{ width: \"100%\" }}>\r\n\r\n            <Col md={4}>\r\n                <NumberBox filterTrigger={(selected: string) => console.log(selected)} label={t(\"users\")} value={<>595 <small style={{ color: \"#2ecc71\" }}>+20 {t(\"this_week\")}</small></>} />\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <NumberBox label={t(\"dealers\")} value={<>257 <small style={{ color: \"#2ecc71\" }}>+12 {t(\"this_week\")}</small></>} />\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <NumberBox label={t(\"watches\")} value={<>712 <small style={{ color: \"#2ecc71\" }}>+32 {t(\"this_week\")}</small></>} />\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n                <LineChart title={t(\"items_by_time\")} labels={LineChartLabels} datasets={LineChartDatasets} />\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n                <LineChart title={t(\"growth_rate\")} labels={GrowthLabels} datasets={GrowthDatasets} />\r\n            </Col>\r\n            \r\n        </Row>\r\n    )\r\n}","E:\\Self Projects\\timepiece\\src\\components\\Statistics\\Statistics.tsx",[],"E:\\Self Projects\\timepiece\\src\\components\\Filters\\Filters.tsx",[],"E:\\Self Projects\\timepiece\\src\\services\\api\\api.tsx",[],"E:\\Self Projects\\timepiece\\src\\components\\Modal\\Modal.tsx",["93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":24,"column":1,"nodeType":"100","endLine":128,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":42,"column":12,"nodeType":"103","messageId":"104","endLine":42,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":15,"column":50,"nodeType":"107","endLine":15,"endColumn":85},{"ruleId":"108","severity":1,"message":"109","line":14,"column":70,"nodeType":"110","messageId":"111","endLine":14,"endColumn":72},{"ruleId":"101","severity":1,"message":"112","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"98","severity":1,"message":"113","line":11,"column":1,"nodeType":"100","endLine":76,"endColumn":2},{"ruleId":"101","severity":1,"message":"114","line":2,"column":16,"nodeType":"103","messageId":"104","endLine":2,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":25,"column":38,"nodeType":"117","messageId":"118","endLine":25,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":58,"column":13,"nodeType":"107","endLine":58,"endColumn":48},{"ruleId":"98","severity":1,"message":"113","line":8,"column":1,"nodeType":"100","endLine":66,"endColumn":2},{"ruleId":"98","severity":1,"message":"113","line":11,"column":1,"nodeType":"100","endLine":81,"endColumn":2},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","Assign arrow function to a variable before exporting as module default","'useLocation' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]