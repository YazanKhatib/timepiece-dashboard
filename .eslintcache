[{"E:\\Self Projects\\timepiece\\src\\index.tsx":"1","E:\\Self Projects\\timepiece\\src\\components\\FormElements\\FormElements.tsx":"2","E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginForm.tsx":"3","E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginFormReducer.ts":"4","E:\\Self Projects\\timepiece\\src\\components\\Loader\\Loader.tsx":"5","E:\\Self Projects\\timepiece\\src\\pages\\Login\\Login.tsx":"6","E:\\Self Projects\\timepiece\\src\\services\\Store\\store.ts":"7","E:\\Self Projects\\timepiece\\src\\services\\routes\\AppRoutes.tsx":"8","E:\\Self Projects\\timepiece\\src\\services\\store\\store.ts":"9","E:\\Self Projects\\timepiece\\src\\services\\hoc\\helpers.ts":"10","E:\\Self Projects\\timepiece\\src\\services\\routes\\ScrollToTop.tsx":"11","E:\\Self Projects\\timepiece\\src\\pages\\Dashboard\\Dashboard.tsx":"12","E:\\Self Projects\\timepiece\\src\\components\\Nav\\Nav.tsx":"13"},{"size":800,"mtime":1608464793453,"results":"14","hashOfConfig":"15"},{"size":4365,"mtime":1608717152270,"results":"16","hashOfConfig":"15"},{"size":3323,"mtime":1608396284834,"results":"17","hashOfConfig":"15"},{"size":1519,"mtime":1608395436609,"results":"18","hashOfConfig":"15"},{"size":562,"mtime":1608395920621,"results":"19","hashOfConfig":"15"},{"size":824,"mtime":1608413915629,"results":"20","hashOfConfig":"15"},{"size":340,"mtime":1608464747623,"results":"21","hashOfConfig":"15"},{"size":1356,"mtime":1608717209710,"results":"22","hashOfConfig":"15"},{"size":340,"mtime":1608464747623,"results":"23","hashOfConfig":"15"},{"size":115,"mtime":1608140715009,"results":"24","hashOfConfig":"15"},{"size":452,"mtime":1608466749805,"results":"25","hashOfConfig":"15"},{"size":1872,"mtime":1608843976974,"results":"26","hashOfConfig":"15"},{"size":2170,"mtime":1608842582964,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"pn4hqa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Self Projects\\timepiece\\src\\index.tsx",[],["59","60"],"E:\\Self Projects\\timepiece\\src\\components\\FormElements\\FormElements.tsx",[],"E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginForm.tsx",["61"],"import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-multi-lang\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { loginSlice, loginState } from \"./LoginFormReducer\";\r\n\r\nimport { Checkbox, InputField } from \"../../components/FormElements/FormElements\";\r\nimport { RippleLoader, SuccessMark } from \"../../components/Loader/Loader\";\r\n\r\nimport './LoginForm.css'\r\n\r\n\r\nexport default function () {\r\n\r\n    // Tranlsation\r\n    const t = useTranslation()\r\n\r\n    // Redux\r\n    const dispatch = useDispatch()\r\n    const loginState = useSelector( ( state: { login: loginState } ) => state.login )\r\n\r\n    const [username, setUsername] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [usernameError, setUsernameError] = useState<string>(\"\");\r\n    const [passwordError, setPasswordError] = useState<string>(\"\");\r\n    const [showSucessMark, setShowSuccessMark] = useState<boolean>(false)\r\n\r\n    const login = () => {\r\n        \r\n        let isReadyToSubmit: boolean = true\r\n        \r\n        if(!username) {\r\n            setUsernameError(t(\"required_error\"))\r\n            isReadyToSubmit = false\r\n        }\r\n        \r\n        if(!password) {\r\n            setPasswordError(t(\"required_error\"))\r\n            isReadyToSubmit = false\r\n        }\r\n        \r\n        if(!isReadyToSubmit) return\r\n\r\n        dispatch( loginSlice.actions.load({}) )\r\n\r\n        setTimeout(() => {\r\n            dispatch( loginSlice.actions.success({}) )\r\n            setTimeout(() => {\r\n                setShowSuccessMark(true)\r\n            }, 200);\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-form\">\r\n            \r\n            <form onSubmit={(e: React.FormEvent<HTMLFormElement>) => e.preventDefault()}>\r\n                \r\n                <InputField\r\n                    value={username}\r\n                    type=\"text\"\r\n                    placeholder={t('username')}\r\n                    error={usernameError}\r\n                    disabled={loginState.isLoading || loginState.isSuccess}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setUsername(e.currentTarget.value);\r\n                        setUsernameError(\"\")\r\n                    } } />\r\n\r\n                <InputField\r\n                    value={password}\r\n                    type=\"password\"\r\n                    placeholder={t('password')}\r\n                    error={passwordError}\r\n                    disabled={loginState.isLoading || loginState.isSuccess}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setPassword(e.currentTarget.value);\r\n                        setPasswordError(\"\")\r\n                    } } />\r\n                \r\n                <Checkbox label={t('remember_me')} disabled={loginState.isLoading || loginState.isSuccess} />\r\n                \r\n                <div className=\"text-center\"><button className={ \"button bg-gold color-white round\" + (loginState.isSuccess ? \" scale\" : '') } style={{ width: loginState.isLoading ? 50 : 200 }} onClick={login}>{ loginState.isLoading ? <RippleLoader /> : t('login') }</button></div>\r\n\r\n                { showSucessMark ? <SuccessMark /> : '' }\r\n\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n\r\n}","E:\\Self Projects\\timepiece\\src\\containers\\LoginForm\\LoginFormReducer.ts",[],"E:\\Self Projects\\timepiece\\src\\components\\Loader\\Loader.tsx",[],"E:\\Self Projects\\timepiece\\src\\pages\\Login\\Login.tsx",["62"],"import { LanguageSwitcher, LightDarkModeSwitcher } from \"../../components/FormElements/FormElements\"\r\nimport LoginForm from \"../../containers/LoginForm/LoginForm\"\r\n\r\nimport Logo from '../../assets/images/logo/primary.svg'\r\n\r\nimport './Login.css'\r\n\r\nconst Login = () => {\r\n    return(\r\n        <div className=\"login-page\">\r\n            \r\n            <div className=\"layout\">\r\n\r\n                <div className=\"form-holder\">\r\n                    <div className=\"text-center\"><img src={Logo} className=\"logo\" /></div>\r\n                    <LoginForm />\r\n                </div>\r\n\r\n                <div className=\"switch-actions\">\r\n                    <LightDarkModeSwitcher />\r\n                    <LanguageSwitcher />\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","E:\\Self Projects\\timepiece\\src\\services\\Store\\store.ts",[],"E:\\Self Projects\\timepiece\\src\\services\\routes\\AppRoutes.tsx",["63"],"import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport ScrollToTop from './ScrollToTop'\r\nimport Login from '../../pages/Login/Login'\r\nimport Dashboard from '../../pages/Dashboard/Dashboard'\r\n\r\nclass AppRoutes extends Component {\r\n\r\n    constructor() {\r\n        super({})\r\n        if(localStorage.getItem(\"lang\"))\r\n            document.body.classList.add(localStorage.getItem(\"lang\") == 'ar' ? 'rtl' : 'ltr')\r\n        if(localStorage.getItem(\"theme\"))\r\n            document.body.classList.add( String( localStorage.getItem(\"theme\") ) )\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Router basename=\"/\">\r\n                <ScrollToTop>\r\n                    { false ?\r\n                    \r\n                    // Auth pages\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Login} />\r\n                        <Route path=\"/\" component={() => <>404</>} />\r\n                    </Switch> :\r\n\r\n                    // Dashboard pages\r\n                    <Switch>\r\n                        <Route path=\"/:section\" component={Dashboard} />\r\n                        <Route path=\"/\" component={Dashboard} />\r\n                    </Switch> }\r\n                </ScrollToTop>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppRoutes","E:\\Self Projects\\timepiece\\src\\services\\store\\store.ts",[],"E:\\Self Projects\\timepiece\\src\\services\\hoc\\helpers.ts",[],"E:\\Self Projects\\timepiece\\src\\services\\routes\\ScrollToTop.tsx",["64"],"import React, { Component } from \"react\"\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\"\r\n\r\nclass ScrollToTop extends Component<RouteComponentProps> {\r\n    \r\n    componentDidUpdate(prevProps: RouteComponentProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","E:\\Self Projects\\timepiece\\src\\pages\\Dashboard\\Dashboard.tsx",["65"],"E:\\Self Projects\\timepiece\\src\\components\\Nav\\Nav.tsx",["66","67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":13,"column":1,"nodeType":"75","endLine":93,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":15,"column":50,"nodeType":"78","endLine":15,"endColumn":85},{"ruleId":"79","severity":1,"message":"80","line":13,"column":70,"nodeType":"81","messageId":"82","endLine":13,"endColumn":72},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"87","line":10,"column":1,"nodeType":"75","endLine":75,"endColumn":2},{"ruleId":"83","severity":1,"message":"88","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":25,"column":38,"nodeType":"91","messageId":"92","endLine":25,"endColumn":40},{"ruleId":"76","severity":1,"message":"77","line":58,"column":13,"nodeType":"78","endLine":58,"endColumn":48},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","'useLocation' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]